import{u as i,I as s,J as t,au as e}from"./chunks/framework.BdEz2lsW.js";const a=e(`<h1 id="how-it-works" tabindex="-1">How it works? <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How it works?&quot;">â€‹</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes one-light dracula-soft vp-code" style="--shiki-light:#383A42;--shiki-dark:#f6f6f4;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282A36;" tabindex="0"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#F286C4;">export</span><span style="--shiki-light:#A626A4;--shiki-dark:#F286C4;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#62E884;"> ivue</span><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#A626A4;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> AnyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  className</span><span style="--shiki-light:#0184BC;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#F286C4;">  ...</span><span style="--shiki-light:#383A42;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#0184BC;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> InferredArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> IVue</span><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#383A42;--shiki-dark:#F6F6F4;">&gt;;</span></span></code></pre></div><p>The main <code>ivue()</code> initializer function uses TypeScript to be able to infer and validate the constrcutor argument types of <code>AnyClass</code> and passes those arguments to the constructor of <code>AnyClass</code>.</p><p><code>ivue</code> allows you to pass any number of arguments into the class <code>constructor(arg1, arg2, arg3, ...etc)</code></p><p><code>ivue()</code> initializer function returns an extended Vue 3 <code>reactive()</code> object in which getters and setters are internally converted to computeds and adds <code>.toRefs()</code> method to the created object. Computeds auto-unwrap themselves when they are accessed as a reactive object property, so the <code>.value</code> properties and computeds get flattened in the resulting object and do not require <code>.value</code> to be accessed.</p><p><code>ivue</code> replicates native JavaScript / TypeScript class implementation by extending descriptors (getters and setters) up the whole prototype ancestors chain thus supporting classical inheritance.</p><p><code>ivue</code> aims to be opaque and minimal, just doing the minimum to convert a class to a reactive object, leaving the rest to be implemented using Vue 3 Composition API inside an initializer function called <code>.init()</code></p>`,7),n=[a],p=JSON.parse('{"title":"How it works?","description":"","frontmatter":{},"headers":[],"relativePath":"pages/how-it-works.md","filePath":"pages/how-it-works.md"}'),h={name:"pages/how-it-works.md"},d=i({...h,setup(l){return(o,r)=>(s(),t("div",null,n))}});export{p as __pageData,d as default};
